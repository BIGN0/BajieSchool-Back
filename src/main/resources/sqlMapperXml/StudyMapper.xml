<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zlfinfo.mapper.StudyMapper">
    <resultMap id="BaseResultMap" type="com.zlfinfo.model.Study">
        <id column="std_id" property="stdId" jdbcType="INTEGER"/>
        <result column="type_id" property="typeId" jdbcType="INTEGER"/>
        <result column="std_title" property="stdTitle" jdbcType="VARCHAR"/>
        <result column="std_content" property="stdContent" jdbcType="VARCHAR"/>
        <result column="std_like" property="stdLike" jdbcType="INTEGER"/>
        <result column="std_comment" property="stdComment" jdbcType="INTEGER"/>
        <result column="std_time" property="stdTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="studyIndexMap" type="com.zlfinfo.model.Study">
        <result column="std_title" property="stdTitle" jdbcType="VARCHAR"/>
        <result column="std_content" property="stdContent" jdbcType="VARCHAR"/>
        <result column="std_like" property="stdLike" jdbcType="INTEGER"/>
        <result column="std_comment" property="stdComment" jdbcType="INTEGER"/>
        <result column="std_time" property="stdTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
      std_id, type_id, std_title, std_content, std_like, std_comment, std_time
    </sql>

    <select id="selectStudyByTypeNUser" resultMap="studyIndexMap">
        SELECT
        study.std_title,
        study.std_content,
        study.std_like,
        study.std_comment,
        study.std_time
        FROM
        study,
        study_type,
        login_status
        WHERE
        login_status.`status` = 0
        AND login_status.username = #{username}
        AND study.type_id = study_type.type_id
        AND study.type_id = #{type}

    </select>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from study
        where std_id = #{stdId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey">
      delete from study
      where std_id = #{stdId,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.zlfinfo.model.Study">
      insert into study (std_id, type_id, std_title,
        std_content, std_like, std_comment,
        std_time)
      values (#{stdId,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR}, #{stdTitle,jdbcType=VARCHAR},
        #{stdContent,jdbcType=VARCHAR}, #{stdLike,jdbcType=INTEGER}, #{stdComment,jdbcType=INTEGER},
        #{stdTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.zlfinfo.model.Study">
        insert into study
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stdId != null">
                std_id,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="stdTitle != null">
                std_title,
            </if>
            <if test="stdContent != null">
                std_content,
            </if>
            <if test="stdLike != null">
                std_like,
            </if>
            <if test="stdComment != null">
                std_comment,
            </if>
            <if test="stdTime != null">
                std_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stdId != null">
                #{stdId,jdbcType=VARCHAR},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=VARCHAR},
            </if>
            <if test="stdTitle != null">
                #{stdTitle,jdbcType=VARCHAR},
            </if>
            <if test="stdContent != null">
                #{stdContent,jdbcType=VARCHAR},
            </if>
            <if test="stdLike != null">
                #{stdLike,jdbcType=INTEGER},
            </if>
            <if test="stdComment != null">
                #{stdComment,jdbcType=INTEGER},
            </if>
            <if test="stdTime != null">
                #{stdTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zlfinfo.model.Study">
        update study
        <set>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=VARCHAR},
            </if>
            <if test="stdTitle != null">
                std_title = #{stdTitle,jdbcType=VARCHAR},
            </if>
            <if test="stdContent != null">
                std_content = #{stdContent,jdbcType=VARCHAR},
            </if>
            <if test="stdLike != null">
                std_like = #{stdLike,jdbcType=INTEGER},
            </if>
            <if test="stdComment != null">
                std_comment = #{stdComment,jdbcType=INTEGER},
            </if>
            <if test="stdTime != null">
                std_time = #{stdTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where std_id = #{stdId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zlfinfo.model.Study">
    update study
    set type_id = #{typeId,jdbcType=VARCHAR},
      std_title = #{stdTitle,jdbcType=VARCHAR},
      std_content = #{stdContent,jdbcType=VARCHAR},
      std_like = #{stdLike,jdbcType=INTEGER},
      std_comment = #{stdComment,jdbcType=INTEGER},
      std_time = #{stdTime,jdbcType=TIMESTAMP}
    where std_id = #{stdId,jdbcType=VARCHAR}
  </update>
</mapper>