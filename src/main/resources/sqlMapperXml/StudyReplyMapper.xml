<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zlfinfo.mapper.StudyReplyMapper">
    <resultMap id="BaseResultMap" type="com.zlfinfo.model.StudyReply">
        <id column="std_re_id" jdbcType="INTEGER" property="stdReId"/>
        <result column="std_id" jdbcType="INTEGER" property="stdId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="std_re_content" jdbcType="VARCHAR" property="stdReContent"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="std_re_time" jdbcType="TIMESTAMP" property="stdReTime"/>
        <result column="std_re_like" jdbcType="INTEGER" property="stdReLike"/>
    </resultMap>
    <sql id="Base_Column_List">
    std_id, std_re_id, username, std_re_content, std_re_time, std_re_like
  </sql>

    <select id="selectAllStudyReply" resultMap="BaseResultMap">
        SELECT * FROM study_reply
    </select>

    <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM study-reply
        WHERE std_id = #{stdId,jdbcType=VARCHAR}
        AND username = #{username,jdbcType=VARCHAR}
    </select>

    <select id="selectStudyReplyByStudy" resultMap="BaseResultMap">
        SELECT DISTINCT
            study_reply.*, `user`.avatar
        FROM
            study_reply
        NATURAL JOIN USER,
            login_status
        WHERE
            login_status.username = #{username}
        AND login_status. STATUS = 0
        AND study_reply.std_id = #{stdId}
        ORDER BY
	        study_reply.std_re_time DESC
    </select>

    <delete id="deleteByPrimaryKey" parameterType="map">
        DELETE FROM study_reply
        WHERE std_id = #{stdId,jdbcType=VARCHAR}
        AND username = #{username,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.zlfinfo.model.StudyReply">
        INSERT INTO study_reply (std_id, username, std_re_content,
          std_re_time, std_re_like)
        VALUES (#{stdId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{stdReContent,jdbcType=VARCHAR},
          #{stdReTime,jdbcType=TIMESTAMP}, #{stdReLike,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.zlfinfo.model.StudyReply">
        INSERT INTO study-reply
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stdId != null">
                std_id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="stdReContent != null">
                std_re_content,
            </if>
            <if test="stdReTime != null">
                std_re_time,
            </if>
            <if test="stdReLike != null">
                std_re_like,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stdId != null">
                #{stdId,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="stdReContent != null">
                #{stdReContent,jdbcType=VARCHAR},
            </if>
            <if test="stdReTime != null">
                #{stdReTime,jdbcType=TIMESTAMP},
            </if>
            <if test="stdReLike != null">
                #{stdReLike,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="addLikeNum" parameterType="java.lang.Integer">
        UPDATE study_reply SET std_re_like = std_re_like + 1 WHERE std_re_id = #{stdReId}
    </update>
</mapper>